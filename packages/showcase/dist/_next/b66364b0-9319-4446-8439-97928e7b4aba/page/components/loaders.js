
          window.__NEXT_REGISTER_PAGE('/components/loaders', function() {
            var comp = module.exports=webpackJsonp([39],{1231:function(e,t,n){e.exports=n(1232)},1232:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(r),s=n(10),o=n(13),i=a(o),d=n(214),p=a(d),u=n(213),c=a(u),m=[],h=[{name:"fadeParent",description:"Specifies whether the direct parent element should be faded out. If so, <Progress/> adds a near-opaque white overlay over the direct parent to make it clear that the content underneath is not accessible/dated/something new coming.",type:"boolean",defaultValue:"false",optional:!0}];t.default=function(e){return l.createElement(i.default,{pathname:e.url.pathname},l.createElement(s.Card,null,l.createElement("p",null,"Spinners and progress elements are important components of data-driven UI's, especially when data takes a long time to load. These components should be easily recognizable, easy to plug into any container, and expressive in their looks. Here are some guidelines and code examples on how to use them effectively:"),l.createElement("h2",null,"Spinners"),l.createElement("p",null,"Spinners are used to indicate loading state in a smaller element, such as a card or a single, smaller form."),l.createElement("h3",null,"Usage"),l.createElement(c.default,{snippet:"\n<Spinner/>\n",components:{Spinner:s.Spinner}}),l.createElement("h3",null,"Props"),l.createElement(p.default,{props:m}),l.createElement("h2",null,"Progress"),l.createElement("p",null,"The progress element is used for larger loading sections, most typically the entire page."),l.createElement("h3",null,"Usage"),l.createElement(c.default,{snippet:'\n<div style={{ width: 300, height: 240, border: "1px solid #adadad", padding: 20, position: "relative" }}>\n  While I patiently wait for my data, this progress bar assures me that things will be ok.\n  <Progress />\n</div>\n',components:{Progress:s.Progress}}),l.createElement("h3",null,"Props>"),l.createElement(p.default,{props:h})))}}},[1231]);
            return { page: comp.default }
          })
        