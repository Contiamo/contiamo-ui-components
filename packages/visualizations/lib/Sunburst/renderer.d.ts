import DataHandler from "./data_handler";
import { D3Selection, Datum, EventBus, State, StateWriter } from "./typings";
import "d3-transition";
declare class Renderer {
    angleScale: any;
    arc: any;
    currentTranslation: [number, number];
    data: Datum[];
    dataHandler: DataHandler;
    el: D3Selection;
    events: EventBus;
    mouseOverDatum: Datum;
    previous: Datum[];
    radiusScale: any;
    radius: number;
    state: State;
    stateWriter: StateWriter;
    topNode: Datum;
    total: number;
    zoomNode: Datum;
    constructor(state: State, stateWriter: StateWriter, events: EventBus, el: D3Selection);
    draw(): void;
    private exit(arcs, duration, disableAnimations);
    private arcClass(d);
    private enterAndUpdate(arcs, duration, disableAnimations);
    private compute();
    private endAngle(d);
    private translate();
    private translateBack(point);
    private isEqual(d1);
    private isSibling(d1);
    private findSiblings(data, d);
    private findAncestor(data, d);
    private findDatum(data, d);
    private arcTween(d);
    private removeArcTween(d);
    private onClick(payload);
    private zoomOut(payload);
    private onMouseOver(d, el);
    private highlightPath(d, el);
    private onMouseLeave(d, el);
    private removeTruncationArrows();
    private arrowTransformation(d);
    private updateTruncationArrows();
}
export default Renderer;
