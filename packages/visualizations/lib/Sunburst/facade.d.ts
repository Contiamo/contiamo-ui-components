import SunburstCanvas from "./canvas";
import StateHandler from "../utils/state_handler";
import EventEmitter from "../utils/event_bus";
import { Accessors, AccessorsObject, Components, Computed, Facade, RawData, SunburstConfig } from "./typings";
declare class SunburstFacade implements Facade {
    __disposed: boolean;
    canvas: SunburstCanvas;
    components: Components;
    context: Element;
    customColorAccessor: boolean;
    events: EventEmitter;
    state: StateHandler<SunburstConfig, RawData>;
    constructor(context: Element);
    insertState(): StateHandler<SunburstConfig, RawData>;
    initialConfig(): SunburstConfig;
    defaultColorAssigner(palette: string[]): (key: string) => string;
    initialAccessors(): AccessorsObject;
    initialComputed(): Computed;
    insertCanvas(): SunburstCanvas;
    insertComponents(): Components;
    data(data?: RawData): RawData;
    config(config?: Partial<SunburstConfig>): SunburstConfig;
    accessors(type: string, accessors: Accessors<any>): Accessors<any>;
    on(event: string, handler: any): void;
    off(event: string, handler: any): void;
    private findNode;
    draw(): Element;
    close(): void;
}
export default SunburstFacade;
