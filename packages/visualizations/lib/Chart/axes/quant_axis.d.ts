import { AxisClass, AxisComputed, AxisType, QuantAxisOptions, AxisPosition, D3Selection, EventBus, Object, Partial, State, StateWriter } from "../typings";
declare class QuantAxis implements AxisClass<number> {
    computed: AxisComputed;
    data: number[];
    el: D3Selection;
    events: EventBus;
    isXAxis: boolean;
    position: AxisPosition;
    previous: AxisComputed;
    state: State;
    stateWriter: StateWriter;
    type: AxisType;
    start: number;
    end: number;
    interval: number;
    unit: string;
    margin: number;
    minTicks: number;
    minTopOffsetTopTick: number;
    tickOffset: number;
    tickSpacing: number;
    outerPadding: number;
    constructor(state: State, stateWriter: StateWriter, events: EventBus, el: D3Selection, position: AxisPosition);
    validate(value: any): boolean;
    private updateOptions(options);
    update(options: QuantAxisOptions, data: number[]): void;
    compute(): void;
    computeInitial(): Partial<AxisComputed>;
    private computeRange();
    computeSteps(computed: Object<any>): [number, number, number];
    computeAligned(computed: Partial<AxisComputed>): void;
    draw(): void;
    private drawTicks();
    private adjustMargins();
    private tickFormatter();
    private getAttributes();
    private getStartAttributes(attributes);
    private drawBorder();
    close(): void;
}
export default QuantAxis;
